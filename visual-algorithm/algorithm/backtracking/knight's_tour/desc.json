{
  "跳马问题": "骑士游历问题是一个古老而著名的问题，问题的描述是：在8×8格的国际象棋棋盘上，象棋马能否从某个格子出发按照“马跳日”的规则跳遍所有64个格子最后再回到出发的那个格子?这个问题又被称为“骑士游历”问题，该问题即可以理解为国际象棋中的棋子在一个空棋盘内移动，问它能否经过六十四格并且只经过一次？",
  "复杂度": {
    "时间": "最坏情况 $O(8^{N^{2}})$",
    "空间": "最坏情况 $O(N^2)$"
  },
  "引用": 
    "<div style='text-align:center'><img src='https://upload.wikimedia.org/wikipedia/commons/c/ca/Knights-Tour-Animation.gif' width='220' height='220' /></div>"
  ,
  "files": {
    "基础代码": "使用回溯算法和递归算法解决跳马问题。"
  }
}
